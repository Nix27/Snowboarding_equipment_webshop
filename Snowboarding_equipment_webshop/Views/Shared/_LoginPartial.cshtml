@using BL.Features.Users.Queries.GetUserById;
@using MediatR;
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IMediator Mediator

@if (SignInManager.IsSignedIn(User))
{
    var claimsIdentity = User.Identity as ClaimsIdentity;
    var userId = claimsIdentity.FindFirst(ClaimTypes.NameIdentifier).Value;

    var user = await Mediator.Send(new GetUserByIdQuery(userId));
    var userName = user.Name;

    <li class="nav-item">
        <span id="userName" class="nav-link" title="Manage">@userName</span>
    </li>
    <li class="nav-item d-flex justify-content-center align-items-center">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="d-flex align-items-center"><i class="bi bi-box-arrow-left"></i> &nbsp; Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item pt-2">
            <a class="nav-link d-flex align-items-center" id="login" asp-area="Identity" asp-page="/Account/Login">Log In &nbsp; <i class="bi bi-box-arrow-in-right"></i> </a>
    </li>
}

