@model IEnumerable<ProductVM>

@{
    ViewData["Title"] = "Our products";

    var page = (int)ViewData["page"];
    var size = (int)ViewData["size"];
    var pages = (int)ViewData["pages"];
    var sortBy = (string)ViewData["sortBy"];
    var minPrice = (double)ViewData["minPrice"];
    var maxPrice = (double)ViewData["maxPrice"];

    ViewData["action"] = "OurProducts";
}

<input id="hiddenData" data-size="@size" data-pages="@pages" data-url="OurProductsTableBodyPartial" hidden />

<div class="products-header mb-5">
    <div class="header-content">
        <h2>Everything You Need In One Place</h2>
        <p>Top quality</p>
    </div>
</div>

<div class="px-3">
    <div class="row justify-content-center">
        <div class="col-2 filter-container mobile-filter-container" id="filter-area">
            <form method="post">
                <div class="mb-4">
                    <div class="d-flex justify-content-between mobile-filter-header">
                        <h4>Categories</h4>
                        <span id="close-filter-btn">X</span>
                    </div>
                    <div class="checkbox-item">
                        <input type="checkbox" id="all" name="categories" value="all" />
                        <label for="all">All</label><br />
                    </div>
                    <div class="checkbox-item">
                        <input type="checkbox" id="snowboards" name="categories" value="snowboards" />
                        <label for="snowboards">Snowboards</label><br />
                    </div>
                    <div class="checkbox-item">
                        <input type="checkbox" id="googles" name="categories" value="googles" />
                        <label for="googles">Googles</label><br />
                    </div>
                    <div class="checkbox-item">
                        <input type="checkbox" id="helmets" name="categories" value="helmets" />
                        <label for="helmets">Helmets</label><br />
                    </div>
                    <div class="checkbox-item">
                        <input type="checkbox" id="jackets" name="categories" value="jackets" />
                        <label for="jackets">Jackets</label><br />
                    </div>
                    <div class="checkbox-item">
                        <input type="checkbox" id="gloves" name="categories" value="gloves" />
                        <label for="gloves">Gloves</label><br />
                    </div>
                    <div class="checkbox-item">
                        <input type="checkbox" id="trousers" name="categories" value="trousers" />
                        <label for="trousers">Trousers</label><br />
                    </div>
                    <div class="checkbox-item">
                        <input type="checkbox" id="boots" name="categories" value="boots" />
                        <label for="boots">Boots</label>
                    </div>
                </div>
                <div class="mb-4">
                    <h4>Price</h4>
                    <div class="d-flex price-filter">
                        <input id="minPrice" type="number" name="minPrice" placeholder="Min" class="w-50" />
                        <span class="mx-3">-</span>
                        <input id="maxPrice" type="number" name="maxPrice" placeholder="Max" class="w-50" />
                    </div>
                </div>
                <button type="submit" class="primary-btn px-5 py-1">Filter</button>
            </form>
        </div>
        <div class="col-10 px-5">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-end mb-5">
                <div class="col-12 col-md-6 mb-1 mb-md-0">
                    <span id="filter-btn" class="col-12 mb-1"><i class="bi bi-funnel-fill me-3"></i></span>
                    <label for="sortBy" class="me-2">Sort by:</label>
                    <select id="sortBy" name="sortBy">
                        <option value="none" selected>None</option>
                        <option value="lower price">Lower price</option>
                        <option value="higher price">Higher price</option>
                    </select>
                </div>
                <form method="post" action="OurProducts">
                    <div class="d-flex text-md-end text-center gap-2">
                        <input type="text" name="searchTerm" id="search-term" class="border-2" />
                        <button type="submit" class="px-3"><i class="bi bi-search"></i></button>
                    </div>
                </form>
            </div>
            @if(Model.Count() > 0)
            {
                <div id="table-body-content" class="row mb-3">
                    <partial name="_ProductsPartial" />
                </div>
                @await Component.InvokeAsync("Pagination")
            }
            else
            {
                <h3>No products to display</h3>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/pagination.js"></script>
    <script src="~/js/our-products-filter.js"></script>

    <script>
        $(() => {
            $('#sortBy').val('@sortBy');
            $('#minPrice').val('@minPrice');
            $('#maxPrice').val('@maxPrice');
        })

        $('#sortBy').on('change', function () {
            let sortBy = $(this).val();

            let ajaxData = {
                page: 1,
                sortBy: sortBy
            };

            $.ajax({
                method: 'GET',
                url: 'OurProductsTableBodyPartial',
                data: ajaxData,
                contentType: 'application/json',
                success: function (data) {
                    $('#table-body-content').html(data);

                    $('.pager-btn').removeClass('btn-pagination-active');
                    $('.pager-btn').addClass('btn-pagination');

                    $('.pager-btn[data-page=' + 1 + ']').removeClass('btn-pagination');
                    $('.pager-btn[data-page=' + 1 + ']').addClass('btn-pagination-active');
                },
                error: function (data) {
                    console.log('error', data);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!'
                    });
                }
            })
        })
    </script>
}