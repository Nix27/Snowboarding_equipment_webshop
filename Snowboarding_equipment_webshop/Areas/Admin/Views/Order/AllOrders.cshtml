@model IEnumerable<OrderVM>

@{
    ViewData["Title"] = "All orders";

    var page = (int)ViewData["page"];
    var size = (int)ViewData["size"];
    var pages = (int)ViewData["pages"];
    var filterBy = (string)ViewData["filterBy"];

    ViewData["action"] = "AllOrders";
}

<div id="content">
    <input id="hiddenData" data-size="@size"
           data-pages="@pages"
           data-url="OrderTableBodyPartial" hidden />

    <div class="container p-2">
        <div class="row mb-4">
            <div class="col-12">
                <h2>All Orders</h2>
            </div>
        </div>

        <div class="d-flex justify-content-between mb-2">
            <div class="d-flex">
                <label for="filterBy" class="me-3 pt-1">Filter by:</label>
                <select id="filterBy" name="filterBy">
                    <option value="None" selected>None</option>
                    <option value="Pending">Pending</option>
                    <option value="Approved">Approved</option>
                    <option value="Processing">Processing</option>
                    <option value="Shipped">Shipped</option>
                    <option value="Cancelled">Cancelled</option>
                </select>
            </div>
        </div>

        @if (Model.Count() > 0)
        {
            <div class="table-responsive">
                <table class="w-100 table content">
                    <thead>
                        <tr class="pb-2">
                            <th>Name</th>
                            <th>Phone Number</th>
                            <th>Order Status</th>
                            <th>Payment Status</th>
                            <th>Total</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="table-body-content">
                        <partial name="_OrderTableBodyPartial" />
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="6">
                                @await Component.InvokeAsync("Pagination")
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        }
        else
        {
            <h4 class="text-center">There is no items.</h4>
        }
    </div>
</div>

@section Scripts{
    <partial name="_NotificationPartial" />
    <script src="~/js/pagination.js"></script>

    <script>
        $(() => {
            $('#filterBy').val('@filterBy');
        })

        $('#filterBy').on('change', function () {
            var selectedFilter = $(this).val();
            var url = `/Admin/Order/AllOrders?size=${@size}&page=0&filterBy=${selectedFilter}`;
            window.location.href = url;
        })
    </script>
}